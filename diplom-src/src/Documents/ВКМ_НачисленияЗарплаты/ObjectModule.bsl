#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
				
//Создание движений: Начисление оклада
//Расчет движений: Процент от выполненных работ и НДФЛ от выполненных работ
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка,
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
	|	КОНЕЦПЕРИОДА(ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
	|	ВКМ_НачисленияЗарплатыНачисления.График КАК График
	|ПОМЕСТИТЬ ВТ_Начисления
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот, 0) КАК СуммаПремииПроцентом,
	|	ВТ_Начисления.Сотрудник,
	|	ВТ_Начисления.ВидРасчета,
	|	ВТ_Начисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВТ_Начисления.ДатаОкончания КАК ПериодДействияКонец,
	|	ВТ_Начисления.График КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ВТ_Начисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад,
	|	ВКМ_ПроцентНДФЛ.Значение КАК ПроцентНДФЛ
	|ИЗ
	|	ВТ_Начисления КАК ВТ_Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,,
	|			Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Начисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_Начисления КАК ВТ_Начисления)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПО ВТ_Начисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Начисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_Начисления КАК ВТ_Начисления)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВТ_Начисления.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
	|	Константа.ВКМ_ПроцентНДФЛ КАК ВКМ_ПроцентНДФЛ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.Показатель = Выборка.Оклад;
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			
			Если Выборка.СуммаПремииПроцентом > 0 Тогда
				Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Выборка);
				Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот;
				Движение.Сумма = Выборка.СуммаПремииПроцентом;
				
				ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеНДФЛ, Выборка);
				ДвижениеНДФЛ.Регистратор = Ссылка;
				ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
				ДвижениеНДФЛ.Сумма = Движение.Сумма * Выборка.ПроцентНДФЛ / 100;
			КонецЕсли;
		
		КонецЕсли;
	
	КонецЦикла;

//Создание движений: Начисление отпускных
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
	|	ВКМ_НачисленияЗарплатыНачисления.ВидРасчета,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания КАК ПериодДействияКонец,
	|	ВКМ_НачисленияЗарплатыНачисления.График КАК ГрафикРаботы,
	|	НАЧАЛОПЕРИОДА(ВКМ_НачисленияЗарплатыНачисления.Ссылка.Дата, МЕСЯЦ) КАК ПериодРегистрации,
	|	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, МЕСЯЦ, -12), МЕСЯЦ) КАК БазовыйПериодНачало,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, МЕСЯЦ, -1), МЕСЯЦ) КАК БазовыйПериодКонец,
	|	РАЗНОСТЬДАТ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания, МЕСЯЦ) +
	|		1 КАК КоличествоМесяцев
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &ВидРасчетаОтпуск";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоМесяцев <= 1 Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Иначе
			Для НомерМесяца = 1 По Выборка.КоличествоМесяцев Цикл
				НачМесяца = НачалоМесяца(ДобавитьМесяц(Выборка.ПериодДействияНачало, НомерМесяца - 1));
				КонМесяца = КонецМесяца(НачМесяца);
				
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, Выборка);
                Движение.ПериодДействияНачало = Макс(НачМесяца, Выборка.ПериодДействияНачало);
				Движение.ПериодДействияКонец = Мин(КонМесяца, Выборка.ПериодДействияКонец);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
//Создание движений: Сторно-записи
	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
	
	Для Каждого Строка Из СторноЗаписи Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Строка);
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Строка.ПериодДействияКонецСторно;
		Движение.Сторно = Истина;
	КонецЦикла;
	
	Движения.Записать();
	
//Расчет движений: Расчет оклада и НДФЛ от оклада
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.Показатель КАК Оклад,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ВКМ_ПроцентНДФЛ.Значение КАК ПроцентНДФЛ
	|ИЗ
	|	Константа.ВКМ_ПроцентНДФЛ КАК ВКМ_ПроцентНДФЛ,
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
	|	И ВидРасчета = &ВидРасчетаОклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";


	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		
		Если Выборка.План <> 0 Тогда
			Движение.Сумма = Выборка.Оклад * Выборка.Факт / Выборка.План; 
			Движение.ОтработаноДней = Выборка.Факт;		
			ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеНДФЛ, Выборка);
			ДвижениеНДФЛ.ПериодРегистрации = Дата;
			ДвижениеНДФЛ.Регистратор = Ссылка;
			ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			ДвижениеНДФЛ.Сумма = Движение.Сумма * Выборка.ПроцентНДФЛ / 100;
			Если Движение.Сторно Тогда
				ДвижениеНДФЛ.Сумма = -ДвижениеНДФЛ.Сумма;
			КонецЕсли;
		КонецЕсли;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = -Движение.Сумма;
			Движение.ОтработаноДней = -Движение.ОтработаноДней;
		КонецЕсли;
		
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();
	
//Расчет движений: Расчет отпуска и НДФЛ от отпуска
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки,
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_ПроцентНДФЛ.Значение КАК ПроцентНДФЛ,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.СуммаБаза, 0) КАК СуммаБазаДоп,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.СуммаБаза, 0) КАК СуммаБазаОсн,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК ОтпускныхДней,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК ОтработаноДнейБаза
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчетаОтпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	Константа.ВКМ_ПроцентНДФЛ КАК ВКМ_ПроцентНДФЛ
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчетаОтпуск";
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчетаОтпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.ОтработаноДней = Выборка.ОтпускныхДней;
		
		Если Выборка.ОтработаноДнейБаза = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение.Сумма = (Выборка.СуммаБазаОсн + Выборка.СуммаБазаДоп) * Выборка.ОтпускныхДней / Выборка.ОтработаноДнейБаза;	
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(ДвижениеНДФЛ, Выборка);
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.Регистратор = Ссылка;
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.Сумма = Движение.Сумма * Выборка.ПроцентНДФЛ / 100;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = -Движение.Сумма;
			Движение.ОтработаноДней = -Движение.ОтработаноДней;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_Удержания.Записать();	

// Создание движений: Регистр накопления ВзаиморасчетыССотрудниками
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(СУММА(ВКМ_ОсновныеНачисления.Сумма), 0) КАК ОснНачисления
	|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Сотрудники КАК ВТ_Сотрудники)
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_ДополнительныеНачисления.Сотрудник,
	|	ЕСТЬNULL(СУММА(ВКМ_ДополнительныеНачисления.Сумма), 0) КАК ДопНачисления
	|ПОМЕСТИТЬ ВТ_ДопНачисления
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ДополнительныеНачисления.Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Сотрудники КАК ВТ_Сотрудники)
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ДополнительныеНачисления.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник,
	|	ЕСТЬNULL(СУММА(ВКМ_Удержания.Сумма), 0) КАК Удержания
	|ПОМЕСТИТЬ ВТ_Удержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|	И ВКМ_Удержания.Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_Сотрудники.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_Сотрудники КАК ВТ_Сотрудники)
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_Удержания.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(ВТ_ДопНачисления.ДопНачисления, 0) КАК ДопНачисления,
	|	ЕСТЬNULL(ВТ_Удержания.Удержания, 0) КАК Удержания,
	|	ЕСТЬNULL(ВТ_ОсновныеНачисления.ОснНачисления, 0) КАК ОснНачисления
	|ИЗ
	|	ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопНачисления КАК ВТ_ДопНачисления
	|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_ДопНачисления.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
	|		ПО ВТ_ОсновныеНачисления.Сотрудник = ВТ_Удержания.Сотрудник";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Сумма = Выборка.ОснНачисления + Выборка.ДопНачисления - Выборка.Удержания;
	КонецЦикла;

//Создание движений: Регистр сведений ВКМ_ГрафикОтпусков

	Движения.ВКМ_ГрафикОтпусков.Очистить();
	Движения.ВКМ_ГрафикОтпусков.Записать();
	Движения.ВКМ_ГрафикОтпусков.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(ВКМ_НачисленияЗарплатыНачисления.ДатаНачала, ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания, ДЕНЬ) +
		|		1 КАК Дней,
		|	ВКМ_НачисленияЗарплатыНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаНачала,
		|	ВКМ_НачисленияЗарплатыНачисления.ДатаОкончания
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.Начисления КАК ВКМ_НачисленияЗарплатыНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыНачисления.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ГрафикОтпусков.Добавить(); 
		ЗаполнитьЗначенияСвойств(Движение,Выборка);
		Движение.Период = Выборка.ДатаОкончания;
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
