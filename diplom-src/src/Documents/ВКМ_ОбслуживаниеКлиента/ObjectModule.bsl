#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ,Режим)
	ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора, ВидДоговора, ВКМ_СтоимостьЧасаРаботыСпециалиста");
	Если ДоговорНеДействителен(ДанныеДоговора.ВидДоговора,ДанныеДоговора.ВКМ_ДатаНачалаДействияДоговора,ДанныеДоговора.ВКМ_ДатаОкончанияДействияДоговора) Тогда
		Отказ = Истина;
	КонецЕсли;
//Создать движения: Регистр накопления "ВКМ_ВыполненныеКлиентуРаботы"
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	Движение.СуммаКОплате = Движение.КоличествоЧасов * ДанныеДоговора.ВКМ_СтоимостьЧасаРаботыСпециалиста;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
		|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПроцентОтРабот = Выборка.ПроцентОтРабот;
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
//Создать движения: Регистр накопления "ВКМ_ВыполненныеСотрудникомРаботы" 
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Сотрудник = Специалист;
	Движение.ЧасовКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	Движение.СуммаКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту") * ДанныеДоговора.ВКМ_СтоимостьЧасаРаботыСпециалиста * ПроцентОтРабот / 100;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 

Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	
	Если ЭтоНовый() Тогда 
		СообщениеДляБота = СтрШаблон("Создана заявка." +Символы.ПС+ "Описание: %1. Специалист: %2. Дата: %3 c %4 до %5",ОписаниеПроблемы,
		Специалист,Формат(ДатаПроведенияРабот,"ДЛФ=DD"),Формат(ВремяНачалаРабот,"ДЛФ=T;"),Формат(ВремяОкончанияРабот,"ДЛФ=T;"));
		ВКМ_Телеграм.СоздатьУведомлениеТелеграмБоту(СообщениеДляБота);	
	Иначе
		ЗаписанныеДанные = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ОписаниеПроблемы, ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот, Специалист");
		СообщениеДляБота  = СтрШаблон("Изменена заявка." +Символы.ПС+ "Описание: %1. Специалист: %2. Дата: %3 c %4 до %5", ОписаниеПроблемы,
		Специалист,Формат(ДатаПроведенияРабот,"ДЛФ=DD"),Формат(ВремяНачалаРабот,"ДЛФ=T;"),Формат(ВремяОкончанияРабот,"ДЛФ=T;"));
		Если ЗаписанныеДанные.Специалист <> Специалист Тогда
			ЕстьИзменения = Истина;
			СообщениеДляБота = СообщениеДляБота + Символы.ПС + "Внимание! Изменился Специалист. Был " + ЗаписанныеДанные.Специалист;
		КонецЕсли;
		Если ЗаписанныеДанные.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
			ЕстьИзменения = Истина;
			СообщениеДляБота = СообщениеДляБота + Символы.ПС + "Внимание! Изменилась дата выполнения работ. Была " + Формат((ЗаписанныеДанные.ДатаПроведенияРабот),"ДЛФ=DD");
		КонецЕсли;
		Если ЗаписанныеДанные.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
			ЕстьИзменения = Истина;
			СообщениеДляБота = СообщениеДляБота + Символы.ПС + "Внимание! Изменилось время начала работ. Было " + Формат(ЗаписанныеДанные.ВремяНачалаРабот,"ДЛФ=T;");
		КонецЕсли;
		Если ЗаписанныеДанные.ВремяОкончанияРабот <> ВремяОкончанияРабот Тогда
			ЕстьИзменения = Истина;
			СообщениеДляБота = СообщениеДляБота + Символы.ПС + "Внимание! Изменилось время окончания работ. Было " + Формат(ЗаписанныеДанные.ВремяОкончанияРабот,"ДЛФ=T;");
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			ВКМ_Телеграм.СоздатьУведомлениеТелеграмБоту(СообщениеДляБота);
		КонецЕсли;
		 
	КонецЕсли; 

	
КонецПроцедуры 

#КонецОбласти
#Область СлужебныеПроцедурыИФункции
Функция ДоговорНеДействителен(ВидДоговора,ДатаНачала,ДатаОкончания) Экспорт
	Результат = Ложь;
	Если Не ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		ОбщегоНазначения.СообщитьПользователю("Выбранный договор не является договором на абонентское ослуживание.");
		Результат = Истина;
	КонецЕсли;
	Если Дата < ДатаНачала ИЛИ Дата > ДатаОкончания Тогда
		ОбщегоНазначения.СообщитьПользователю("Непорядок со сроком действия договора.");
		Результат = Истина;
	КонецЕсли;
Возврат Результат
КонецФункции
#КонецОбласти
#КонецЕсли

